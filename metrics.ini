[Common]
InitialScreen="ScreenInit"
ImageCache=ThemePrefs.Get("UseImageCache") and "Banner,Background,Jacket" or "Banner"

[ScreenInit]
AllowStartToSkip=false
PrepareScreen=true
TimerSeconds=2.5
StopMusicOnBack=false
MemoryCardIcons=false
ForceTimer=true
HeaderOnCommand=visible,false

# these aren't real metrics; they are quick and dirty hacks
ShowCreditDisplay=false
ShowPlayerAvatar=false

###########################################################################
###		ATTRACT LOOP SCREENS
###########################################################################

[ScreenAttract]
ShowCreditDisplay=false
ShowPlayerAvatar=false
FooterOnCommand=visible,false

# the Simply Love logo and nothing else
[ScreenLogo]
PrevScreen="ScreenInit"
NextScreen="ScreenRankingSingle"
HeaderOnCommand=visible,false
TimerSeconds=14
ShowCreditDisplay=true

[ScreenRankingSingle]
Class="ScreenHighScores"
Fallback="ScreenAttract"
PrevScreen="ScreenLogo"
NextScreen="ScreenRankingDouble"

ManualScrolling=false
HighScoresType="HighScoresType_AllSteps"
NumColumns=2
ColumnDifficulty1="Difficulty_Hard"
ColumnDifficulty2="Difficulty_Challenge"
ColumnStepsType1=(function() return "StepsType_" .. GAMESTATE:GetCurrentGame():GetName():gsub("^%l", string.upper) .. "_Single" end)()
ColumnStepsType2=(function() return "StepsType_" .. GAMESTATE:GetCurrentGame():GetName():gsub("^%l", string.upper) .. "_Single" end)()

NumMostRecentScoresToShow=30
MaxItemsToShow=30

ScrollerOnCommand=xy,_screen.cx,_screen.cy+20;scrollthroughallitems
ScrollerItemTransformFunction=function(self,offset,itemIndex,numItems) self:y(65*offset) end
ScrollerItemsToDraw=7
ScrollerSecondsPerItem=0.5


[ScreenRankingDouble]
Fallback="ScreenRankingSingle"
PrevScreen="ScreenLogo"
NextScreen=Branch.AfterScreenRankingDouble()
StartScreen=Branch.TitleMenu()

ColumnStepsType1=(function() return "StepsType_" .. GAMESTATE:GetCurrentGame():GetName():gsub("^%l", string.upper) .. "_Double" end)()
ColumnStepsType2=(function() return "StepsType_" .. GAMESTATE:GetCurrentGame():GetName():gsub("^%l", string.upper) .. "_Double" end)()

ScrollerOffCommand=diffusealpha,0
HeaderOffCommand=linear,0.2;diffusealpha,0


[ScreenMemoryCard]
Fallback="ScreenAttract"
NextScreen="ScreenRainbow"
PrevScreen="ScreenRainbow"
ForceTimer=true
TimerSeconds=10
HeaderOnCommand=visible,false
TimerOnCommand=visible,false


[ScreenRainbow]
Fallback="ScreenAttract"
NextScreen="ScreenLogo"
PrevScreen="ScreenLogo"
ForceTimer=true
TimerSeconds=10
HeaderOnCommand=visible,false
TimerOnCommand=visible,false
MemoryCardIcons=false


###########################################################################
###		SCREENS BEFORE SelectMusic
###########################################################################
# this is for when we are in Home mode
[ScreenTitleMenu]
PrevScreen="ScreenInit"
IdleTimeoutSeconds=30
IdleTimeoutScreen="ScreenInit"

ChoiceNames="1,2,3,4"
DefaultChoice="1"
Choice1="applydefaultoptions;screen,"..Branch.AllowScreenSelectProfile()..";text,Dance Mode"
Choice2="screen,ScreenEditMenu;text,Edit Mode"
Choice3="screen,ScreenOptionsService;text,Options"
Choice4="screen,ScreenExit;text,Exit"

ScrollerX=_screen.cx
ScrollerY=_screen.cy+_screen.h/3.8
ScrollerTransform=function(self,offset,itemIndex,numItems) self:y(22*offset) end

HeaderOnCommand=visible,false
FooterOnCommand=visible,false
ShowPlayerAvatar=false

# this is for when we are in Free/Pay mode
[ScreenTitleJoin]
Fallback="ScreenTitleMenu"
IdleTimeoutSeconds=30
IdleTimeoutScreen="ScreenInit"
ChoiceNames="1"
Choice1="applydefaultoptions;screen,"..Branch.AllowScreenSelectProfile()..";text,Dance Mode"
ScrollerOnCommand=visible,false

###########################################################################

[ScreenSelectProfile]
PrevScreen=Branch.TitleMenu()
NextScreen="ScreenAfterSelectProfile"

# declare this to be intentionally empty to override _fallback's
# function that locks input for 1 second
ScreenOnCommand=

RepeatRate=20
CodeNames="Select"
CodeSelect=GAMESTATE:GetCurrentGame():GetName()=="pump" and "DownLeft-DownRight" or (PREFSMAN:GetPreference("ThreeKeyNavigation") and "MenuLeft-MenuRight" or "Select")

[ScreenAfterSelectProfile]
Fallback="ScreenWithMenuElements"
PrevScreen=Branch.TitleMenu()
NextScreen=Branch.AllowScreenSelectColor()


[ScreenSelectColor]
Fallback="ScreenWithMenuElements"
PrevScreen=Branch.TitleMenu()
NextScreen=Branch.AfterScreenSelectColor()
TimerSeconds=20


[ScreenSelectStyle]
Class="ScreenWithMenuElements"
Fallback="ScreenWithMenuElements"
PrevScreen=Branch.TitleMenu()
NextScreen="ScreenSelectPlayMode"
TimerSeconds=20


[ScreenSelectPlayMode]
Class="ScreenSelectMaster"
Fallback="ScreenSelectMaster"
PrevScreen=Branch.TitleMenu()

ShowFooter=true
TimerSeconds=20

ChoiceNames="Casual,ITG,FA+"
ChoiceCasual="name,Casual; screen,ScreenProfileLoad"
ChoiceITG="name,ITG; screen,ScreenSelectPlayMode2"
ChoiceFA+="name,FA+; screen,ScreenSelectPlayMode2"


DefaultChoice=SL.Global.GameMode

ShowScroller=false
ShowIcon=true
WrapCursor=true
SharedSelection=true

UseIconMetrics=true

IconChoiceCasualX=_screen.cx - 110
IconChoiceCasualY=_screen.cy - 75

IconChoiceITGX=_screen.cx - 110
IconChoiceITGY=_screen.cy - 25

IconChoiceFA+X=_screen.cx - 110
IconChoiceFA+Y=_screen.cy + 25

# there is not a 4th choice for now, so these are commented out
# IconChoice_unused=_screen.cx - 110
# IconChoice_unused=_screen.cy + 75


[ScreenSelectPlayMode2]
Fallback="ScreenSelectPlayMode"

ChoiceNames="Regular,Marathon"
ChoiceRegular="playmode,Regular; name,Regular; screen,ScreenProfileLoad"
ChoiceMarathon="playmode,Nonstop; name,Marathon; screen,ScreenProfileLoad"
# ChoiceEndless="playmode,Endless; name,Endless; screen,ScreenProfileLoad"
# ChoiceOni="playmode,Oni; name,Oni; screen,ScreenProfileLoad"

IconChoiceRegularX=_screen.cx - 110
IconChoiceRegularY=_screen.cy - 75

IconChoiceMarathonX=_screen.cx - 110
IconChoiceMarathonY=_screen.cy - 25

# IconChoiceEndlessX=_screen.cx - 110
# IconChoiceEndlessY=_screen.cy + 25

# IconChoiceOniX=_screen.cx - 110
# IconChoiceOniY=_screen.cy + 75


[ScreenProfileLoad]
ShowFooter=true
StyleIcon=false
NextScreen=Branch.AfterSelectPlayMode()
ShowCreditDisplay=false


# Profile Saving occurs after every ScreenEvaluation
[ScreenProfileSave]
HeaderOnCommand=visible,false
StyleIcon=false
NextScreen=Branch.AfterProfileSave()
Summary=false
ShowCreditDisplay=false

[ScreenPlayAgain]
Fallback="ScreenWithMenuElements"
NextScreen=SL.Global.ScreenAfter.PlayAgain
TimerSeconds=15


[ScreenReloadSSM]
Fallback="ScreenWithMenuElements"
NextScreen="ScreenSelectMusic"
PrevScreen="ScreenSelectMusic"
HeaderOnCommand=visible,false
FooterOnCommand=visible,false
ShowCreditDisplay=false


[ScreenHeartEntry]
HeartEntryEnabled=true

[ScreenNameEntryTraditional]
PrevScreen="ScreenProfileSaveSummary"
NextScreen="ScreenProfileSaveSummary"
HeaderOnCommand=visible,false
FooterOnCommand=visible,false
TimerSeconds=SL.Global.MenuTimer.ScreenNameEntry
TimerOnCommand=hide_if,not PREFSMAN:GetPreference("MenuTimer");draworder,99;
ForceTimer=false
ShowCreditDisplay=false
ShowPlayerAvatar=true

[ScreenProfileSaveSummary]
Fallback="ScreenProfileSave"
NextScreen=Branch.AfterProfileSaveSummary()
PrevScreen=Branch.AfterProfileSaveSummary()

[ScreenGameOver]
Class="ScreenAttract"
Fallback="ScreenAttract"
PrevScreen=Branch.AfterInit()
NextScreen=Branch.AfterInit()
HeaderOnCommand=visible,false
ShowCreditDisplay=false
ShowPlayerAvatar=true
TimerSeconds=(ThemePrefs.Get("VisualStyle") == "SRPG5") and 135 or 23
ForceTimer=true
TimerOnCommand=visible,false
PlayMusic=true


###########################################################################
###		Classes of Screens (that are mostly just inherited from)
###########################################################################
[Screen]
StyleIcon=false
ShowHelp=true
ShowCreditDisplay=false


[ScreenWithMenuElements]
TimerX=_screen.w-30
TimerY=-1
TimerOnCommand=hide_if,not PREFSMAN:GetPreference("MenuTimer");draworder,99;

HeaderX=0
HeaderY=0
FooterX=_screen.cx
FooterY=_screen.h

MemoryCardIcons=true

MemoryCardDisplayP1X=WideScale(18,24);
MemoryCardDisplayP1Y=SCREEN_BOTTOM-14
MemoryCardDisplayP1OnCommand=draworder,96;zoom,WideScale(0.175, 0.215)

MemoryCardDisplayP2X=SCREEN_RIGHT-WideScale(18,24)
MemoryCardDisplayP2Y=SCREEN_BOTTOM-14
MemoryCardDisplayP2OnCommand=draworder,96;zoom,WideScale(0.175, 0.215)

[ScreenSelect]
DoublePressToSelect=false
UseTwoLists=false
OptionOrderBUp=""
OptionOrderBDown=""
OptionOrderBLeft=""
OptionOrderBRight=""
OptionOrderBAuto=""

[ScreenSelectMaster]
Fallback="ScreenWithMenuElements"
ShowCreditDisplay=true

TimerSeconds=-1
StopMusicOnBack=false
HelpText=ScreenString("HelpText")

[ScreenHighScores]
NextScreen=Branch.TitleMenu()
TimerSeconds=1

[ScreenPrompt]
QuestionY=_screen.cy-60
QuestionOnCommand=_wrapwidthpixels,600

[ScreenTextEntry]
QuestionY=_screen.cy-64
QuestionOnCommand=_wrapwidthpixels,600
AnswerY=_screen.cy+16

## Options Section #############################################################

[OptionsCursor]
CanGoLeftX=-17
CanGoLeftY=0
CanGoLeftOnCommand=halign,1;

CanGoRightX=16
CanGoRightY=0
CanGoRightOnCommand=halign,0;

[OptionsCursorP1]
Fallback="OptionsCursor"
LeftOnCommand=diffuse,PlayerColor(PLAYER_1,true)
MiddleOnCommand=diffuse,PlayerColor(PLAYER_1,true)
RightOnCommand=diffuse,PlayerColor(PLAYER_1,true)

LeftX=0
MiddleX=0
RightX=0

LeftY=-1
MiddleY=-1
RightY=-1

[OptionsCursorP2]
Fallback="OptionsCursor"
LeftOnCommand=diffuse,PlayerColor(PLAYER_2,true)
MiddleOnCommand=diffuse,PlayerColor(PLAYER_2,true)
RightOnCommand=diffuse,PlayerColor(PLAYER_2,true)

LeftX=0
MiddleX=0
RightX=0

LeftY=1
MiddleY=1
RightY=1
#### end OptionsCursor ####

[OptionsUnderline]

[OptionsUnderlineP1]
Fallback="OptionsUnderline"
LeftOnCommand=diffuse,PlayerColor(PLAYER_1,true)
MiddleOnCommand=diffuse,PlayerColor(PLAYER_1,true)
RightOnCommand=diffuse,PlayerColor(PLAYER_1,true)

[OptionsUnderlineP2]
Fallback="OptionsUnderline"
LeftOnCommand=diffuse,PlayerColor(PLAYER_2,true)
MiddleOnCommand=diffuse,PlayerColor(PLAYER_2,true)
RightOnCommand=diffuse,PlayerColor(PLAYER_2,true)


###########################################################################
###		OptionRow
###########################################################################

[OptionRow]
ShowBpmInSpeedTitle=false

TitleX=WideScale(26,40)
TitleOnCommand=zoom,0.8;vertspacing,-8;horizalign,left;maxwidth,WideScale(128,120)
TitleGainFocusCommand=%function(self)\
	self:diffuse(PlayerColor(PLAYER_1)) \
	DiffuseEmojis(self) \
	MESSAGEMAN:Broadcast("OptionRowChanged", {Title=self}) \
end
TitleLoseFocusCommand=diffuse,color("#FFFFFF")

FrameX=0
FrameY=0
FrameOnCommand=diffusealpha,DarkUI() and 1 or 0.8
FrameGainFocusCommand=diffuse,DarkUI() and color("#666666") or color("#333333"); diffusealpha,1
FrameLoseFocusCommand=diffuse,color("#071016");diffusealpha,DarkUI() and 1 or 0.8

ItemsStartX=WideScale(146,160)
ItemsEndX=_screen.w-225

# the x value of where to draw the single BitmapText item that
# will display when the OptionRow's layout is ShowOneInRow
ItemsLongRowP1X=WideScale(_screen.cx-100,_screen.cx-130)
ItemsLongRowP2X=WideScale(_screen.cx+100,_screen.cx+100)

# pixels between each item when the OptionRow's layout is ShowAllInOneRow
ItemsGapX=14

ItemOnCommand=zoom,0.75; diffusealpha,1
ItemGainFocusCommand=
ItemLoseFocusCommand=

# use a slightly different StartX value for PlayerOptions2 and PlayerOptions3
# where every row is guaranteed to start with a ▼ character
[OptionRowExtendedPlayerOptions]
Fallback="OptionRow"
ItemsStartX=WideScale(146,155)


[OptionRowSimple]
Fallback="OptionRow"
TitleOnCommand=zoom,0.8;halign,0;vertspacing,-8;
ItemOnCommand=diffuse,DarkUI() and Color.White or Color.Black;zoom,0.8;vertspacing,-8;
FrameDisabledCommand=diffuse,color("#000000");

[OptionRowSimpleService]
Fallback="OptionRowSimple"
# intentionally empty so it doesn't inherit from [OptionRow]
FrameOnCommand=
TitleX=WideScale(20,40)
TitleGainFocusCommand=%function(self) \
	local index = SCREENMAN:GetTopScreen():GetCurrentRowIndex(PLAYER_1) + SL.Global.ActiveColorIndex \
	self:diffuse( GetHexColor(index) ) \
	MESSAGEMAN:Broadcast("OptionRowChanged", {Title=self}) \
end

[OptionRowExit]
Fallback="OptionRow"
FrameOnCommand=diffusealpha,0.7
FrameGainFocusCommand=diffuse,color("#293238");diffusealpha,0.8
FrameLoseFocusCommand=diffuse,color("#071016");diffusealpha,0.8
TitleGainFocusCommand=diffuse,color("#000000")
ItemOnCommand=zoom,0.8;x,WideScale(210,285)


[OptionRowSimpleExit]
Fallback="OptionRow"
TitleX=WideScale(20,40)
TitleGainFocusCommand=%function(self) \
	self:diffuse(0,0,0,1) \
	MESSAGEMAN:Broadcast("OptionRowChanged", {Title=self}) \
end
FrameGainFocusCommand=diffuse,PlayerColor(PLAYER_1);diffusealpha,1
ItemOnCommand=visible,false




###########################################################################
###		Metrics for ScreenOptionsServiceChild
###		(These are subscreens within the OperatorMenu.)
###########################################################################

[ScreenOptionsServiceChild]
RepeatRate=30
RepeatDelay=0.333
StopMusicOnBack=false
ExplanationTogetherOnCommand=visible,false
OptionRowNormalMetricsGroup="OptionRowServiceChild"
OptionRowExitMetricsGroup="OptionRowServiceChildExit"
ShowCreditDisplay=false
AllowRepeatingChangeValueInput=true
FooterOnCommand=visible,false

[OptionRowServiceChild]
Fallback="OptionRow"
TitleX=WideScale(20, 40)
FrameX=0
ItemsStartX=WideScale(140, 170)
ItemsEndX=WideScale(256, 400)
ItemsLongRowSharedX=WideScale(210,285)
# intentionally empty so it doesn't inherit from [OptionRow]
FrameOnCommand=
FrameGainFocusCommand=diffuse,DarkUI() and color("#666666FF") or color("#333333FF")
FrameLoseFocusCommand=diffuse,color("#071016");diffusealpha,DarkUI() and 1 or 0.8


[OptionRowServiceChildExit]
Fallback="OptionRowServiceChild"
TitleOnCommand=visible,false

# Simply Love Options gets its own slightly customized OptionRows
# normally ItemsGapX is 14, which feels comfortable for the Miso Light font
# Set to 13 here so that we can fit more emojis in a single row before
# it collapses into displaying one a time.
[OptionRowSimplyLoveOptions]
Fallback="OptionRowServiceChild"
ItemsGapX=13


###########################################################################
###		OptionRow PlayerOptions definitions
###########################################################################

[ScreenOptionsMaster]
Perspective="5;selectone"
PerspectiveDefault="mod,overhead"
Perspective,1="mod,overhead;name,Overhead"
Perspective,2="mod,hallway;name,Hallway"
Perspective,3="mod,distant;name,Distant"
Perspective,4="mod,incoming;name,Incoming"
Perspective,5="mod,space;name,Space"

Accel="5;selectmultiple"
AccelDefault="mod,no boost,no brake,no wave,no expand,no boomerang"
Accel,1="mod,boost;name,Boost"
Accel,2="mod,brake;name,Brake"
Accel,3="mod,wave;name,Wave"
Accel,4="mod,expand;name,Expand"
Accel,5="mod,boomerang;name,Boomerang"

Effect="10;selectmultiple"
EffectDefault="mod,no drunk,no dizzy,no confusion,no flip,no invert,no tornado,no tipsy,no bumpy,no beat"
Effect,1="mod,drunk;name,Drunk"
Effect,2="mod,dizzy;name,Dizzy"
Effect,3="mod,confusion;name,Confusion"
Effect,4="mod,-100% mini;name,Big"
Effect,5="mod,flip;name,Flip"
Effect,6="mod,invert;name,Invert"
Effect,7="mod,tornado;name,Tornado"
Effect,8="mod,tipsy;name,Tipsy"
Effect,9="mod,bumpy;name,Bumpy"
Effect,10="mod,beat;name,Beat"

Appearance="5;selectmultiple"
AppearanceDefault="mod,no hidden,no sudden,no stealth,no blink,no randomvanish"
Appearance,1="mod,hidden;name,Hidden"
Appearance,2="mod,sudden;name,Sudden"
Appearance,3="mod,stealth;name,Stealth"
Appearance,4="mod,blink;name,Blink"
Appearance,5="mod,randomvanish;name,R.Vanish"

# add "Backwards" as a turn mod if the current game is pump
# (the engine redirects "Backwards" to "Mirror" in games other than pump so the option is redundant)
Turn=(function() return GAMESTATE:GetCurrentGame():GetName()=="pump" and "7;selectone" or "6;selectone" end)()
TurnDefault="mod,no turn"
Turn,1="mod,no turn;name,None"
Turn,2="mod,mirror;name,Mirror"
Turn,3="mod,left;name,Left"
Turn,4="mod,right;name,Right"
Turn,5="mod,shuffle;name,Shuffle"
Turn,6="mod,supershuffle;name,Blender"
Turn,7="mod,backwards;name,Backwards"


Insert="7;selectmultiple"
InsertDefault="mod,no wide,no big,no quick,no skippy,no echo,no stomp,no bmrize"
Insert,1="mod,wide;name,Wide"
Insert,2="mod,big;name,Big"
Insert,3="mod,quick;name,Quick"
Insert,4="mod,bmrize;name,BMRize"
Insert,5="mod,skippy;name,Skippy"
Insert,6="mod,echo;name,Echo"
Insert,7="mod,stomp;name,Stomp"

Remove="8;selectmultiple"
RemoveDefault="mod,no little,no nomines,no noholds,no nojumps,no nohands,no noquads,no nolifts,no nofakes"
Remove,1="mod,little;name,Little"
Remove,2="mod,nomines;name,NoMines"
Remove,3="mod,noholds;name,NoHolds"
Remove,4="mod,nojumps;name,NoJumps"
Remove,5="mod,nohands;name,NoHands"
Remove,6="mod,noquads;name,NoQuads"
Remove,7="mod,nolifts;name,NoLifts"
Remove,8="mod,nofakes;name,NoFakes"

RemoveA="4;selectmultiple"
RemoveADefault="mod,no little,no nomines,no noholds,no nojumps"
RemoveA,1="mod,little;name,Little"
RemoveA,2="mod,nomines;name,NoMines"
RemoveA,3="mod,noholds;name,NoHolds"
RemoveA,4="mod,nojumps;name,NoJumps"

RemoveB="4;selectmultiple"
RemoveBDefault="mod,no nohands,no noquads,no nolifts,no nofakes"
RemoveB,1="mod,nohands;name,NoHands"
RemoveB,2="mod,noquads;name,NoQuads"
RemoveB,3="mod,nolifts;name,NoLifts"
RemoveB,4="mod,nofakes;name,NoFakes"

Scroll="5;selectmultiple"
ScrollDefault="mod,no reverse,no split,no alternate,no cross,no centered"
Scroll,1="mod,reverse;name,Reverse"
Scroll,2="mod,split;name,Split"
Scroll,3="mod,alternate;name,Alternate"
Scroll,4="mod,cross;name,Cross"
Scroll,5="mod,centered;name,Centered"

Holds="5;selectmultiple"
HoldsDefault="mod,no planted,no floored,no twister,no holdrolls"
Holds,1="mod,planted;name,Planted"
Holds,2="mod,floored;name,Floored"
Holds,3="mod,twister;name,Twister"
Holds,4="mod,norolls;name,NoRolls"
Holds,5="mod,holdrolls;name,HoldsToRolls"



[ScreenPlayerOptions]
Class="ScreenPlayerOptions"
Fallback="ScreenOptions"

NextScreen=SL.Global.ScreenAfter.PlayerOptions
TimerSeconds=SL.Global.MenuTimer.ScreenPlayerOptions
TimerStealth=false
TimerOnCommand=hide_if,not PREFSMAN:GetPreference("MenuTimer");draworder,99;
TimerOffCommand=
ForceTimer=false
ShowHeader=true
FooterOnCommand=visible,false
ShowCreditDisplay=false

OptionRowExitMetricsGroup="OptionRowExit"
RowPositionTransformFunction=function(self,positionIndex,itemIndex,numItems) self:y( (_screen.cy-170) + (_screen.h*0.065*positionIndex) ); end

RepeatRate=30
AllowRepeatingChangeValueInput=true
LineNames=(function() \
	local lines = "SpeedModType,SpeedMod,Mini,Perspective,NoteSkinSL,Judgment,ComboFont,HoldJudgment,BackgroundFilter,MusicRate,Stepchart,ScreenAfterPlayerOptions" \
	if GAMESTATE:GetCurrentGame():GetName() == "pump" then lines = lines:gsub("HoldJudgment,","") end \
	return lines \
end)()

##### Most Used #####
# OptionRows assembled in ./Scripts/SL-PlayerOptions.lua
LineSpeedModType="lua,CustomOptionRow('SpeedModType')"
LineSpeedMod="lua,CustomOptionRow('SpeedMod')"
LineMini="lua,CustomOptionRow('Mini')"
LineNoteSkinSL="lua,CustomOptionRow('NoteSkin')"
LineJudgment="lua,CustomOptionRow('JudgmentGraphic')"
LineComboFont="lua,CustomOptionRow('ComboFont')"
LineBackgroundFilter="lua,CustomOptionRow('BackgroundFilter')"
LineMusicRate="lua,CustomOptionRow('MusicRate')"
LineStepchart="lua,CustomOptionRow('Stepchart')"
LineScreenAfterPlayerOptions="lua,CustomOptionRow('ScreenAfterPlayerOptions')"

LineHoldJudgment="lua,CustomOptionRow('HoldJudgment')"
LineHide="lua,CustomOptionRow('Hide')"

# GameplayExtras options are presented as a single OptionRow in WideScreen
LineGameplayExtras="lua,CustomOptionRow('GameplayExtras')"
# split GameplayExtras options into two separate lines when not in WideScreen
#    by having an extra "B" OptionRow available if needed
#    in 4:3 aspect ratio, trying to fit all the GameplayExtras choices in a single
#    OptionRow results in the choices being collapsed (hidden) into one choice so they
#    don't spill offscreen.  Not going offscreen is good, but hiding choices can be
#    unclear from a usability standpoint.
LineGameplayExtrasB="lua,CustomOptionRow('GameplayExtrasB')"

LineErrorBar="lua,CustomOptionRow('ErrorBar')"
LineErrorBarOptions="lua,CustomOptionRow('ErrorBarOptions')"
LineMeasureCounterOptions="lua,CustomOptionRow('MeasureCounterOptions')"
LineMeasureCounter="lua,CustomOptionRow('MeasureCounter')"
LineDataVisualizations="lua,CustomOptionRow('DataVisualizations')"
LineTargetScore="lua,CustomOptionRow('TargetScore')"
LineActionOnMissedTarget="lua,CustomOptionRow('ActionOnMissedTarget')"
LineLifeMeterType="lua,CustomOptionRow('LifeMeterType')"

# lists assembled by the engine
LinePerspective="list,Perspective"

# LineNoteSkin is the engine-generated OptionRow
# we use it in EditMode's PlayerOptions to avoid buggy behavior
LineNoteSkin="list,NoteSkins"

## These OptionRows appear on [ScreenPlayerOptions2] and [ScreenAttackMenu],
## define them here anyway so that each of those screens can fallback on this one
LineTurn="list,Turn"
LineScroll="list,Scroll"

## effects
Line11="list,Accel"
Line12="list,Effect"
Line13="list,Appearance"

ExplanationP1X=WideScale(26,39)
ExplanationP1Y=SCREEN_BOTTOM-95.5
ExplanationP1OnCommand=zoom,WideScale(0.7,0.75);diffuse,PlayerColor(PLAYER_1);_wrapwidthpixels,_screen.w*WideScale(0.59,0.5);horizalign,left;vertspacing,-7;cropright,1;linear,0.5;cropright,0
ExplanationP1OffCommand=linear,0.2;diffusealpha,0

ExplanationP2X=_screen.cx+WideScale(-22,0)
ExplanationP2Y=SCREEN_BOTTOM-95.5
ExplanationP2OnCommand=zoom,WideScale(0.7,0.75);diffuse,PlayerColor(PLAYER_2);_wrapwidthpixels,_screen.w*WideScale(0.59,0.5);horizalign,left;vertspacing,-7;cropright,1;linear,0.5;cropright,0
ExplanationP2OffCommand=linear,0.2;diffusealpha,0



[ScreenPlayerOptions2]
Class="ScreenPlayerOptions"
Fallback="ScreenPlayerOptions"
PrevScreen="ScreenPlayerOptions"
NextScreen=SL.Global.ScreenAfter.PlayerOptions2
NavigationMode="toggle"
OptionRowNormalMetricsGroup="OptionRowExtendedPlayerOptions"


# remove ActionOnMissedTarget if we're not in EventMode; it doesn't make sense to have it available in a Public Arcade setting
# remember that removing OptionRows from the modifier menus is only one part of this
# we need to perform additional checks in ./BGA/ScreenGameplay underlay/ to ensure that unwanted modifiers aren't brought into gameplay via player profile
LineNames=(function() \
	local lines = "Turn,Scroll,Hide,LifeMeterType,DataVisualizations,TargetScore,ActionOnMissedTarget,GameplayExtras,ErrorBar,ErrorBarOptions,MeasureCounter,MeasureCounterOptions,TimingWindows,ScreenAfterPlayerOptions2" \
	if not IsUsingWideScreen() then lines = lines:gsub("GameplayExtras", "GameplayExtras,GameplayExtrasB") end \
	if not PREFSMAN:GetPreference("EventMode") then lines = lines:gsub("ActionOnMissedTarget,", "") end \
   return lines \
end)()

# OptionRows assembled in ./Scripts/SL-PlayerOptions.lua
LineScreenAfterPlayerOptions2="lua,CustomOptionRow('ScreenAfterPlayerOptions2')"
LineTimingWindows="lua,CustomOptionRow('TimingWindows')"

[ScreenPlayerOptions3]
Class="ScreenPlayerOptions"
Fallback="ScreenPlayerOptions"
PrevScreen="ScreenPlayerOptions2"
NextScreen=SL.Global.ScreenAfter.PlayerOptions3
NavigationMode="toggle"
OptionRowNormalMetricsGroup="OptionRowExtendedPlayerOptions"

# remove Characters if no dancing character directories were found
LineNames=(function() \
	local lines = "Insert,Remove,Holds,11,12,13,Attacks,Characters,ScreenAfterPlayerOptions3" \
	if not IsUsingWideScreen() then lines = lines:gsub("Remove", "RemoveA,RemoveB") end \
	if #CHARMAN:GetAllCharacters() < 1 then lines = lines:gsub("Characters,", "") end \
	return lines \
end)()

# OptionRows assembled in ./Scripts/SL-PlayerOptions.lua
LineScreenAfterPlayerOptions3="lua,CustomOptionRow('ScreenAfterPlayerOptions3')"
# OptionRows assembled by the engine
LineInsert="list,Insert"
LineRemove="list,Remove"
LineRemoveA="list,RemoveA"
LineRemoveB="list,RemoveB"
LineHolds="list,Holds"
LineAttacks="list,Attacks"
LineCharacters="list,Characters"



[ScreenAttackMenu]
Class="ScreenPlayerOptions"
Fallback="ScreenPlayerOptions"
TimerSeconds=-1
NavigationMode="toggle"

LineNames="Mini,Perspective,Scroll,11,12,13"


## edit options
[ScreenEditOptions]
Fallback="ScreenPlayerOptions"
LineNames="SpeedModType,SpeedMod,Mini,Perspective,NoteSkin,MusicRate,Assist,ShowBGChangesPlay"
LineAssist="list,Assist"
LineShowBGChangesPlay="conf,EditorShowBGChangesPlay"


###########################################################################
###		Base Options Screen
###########################################################################

[ScreenOptions]
NavigationMode="normal"
StopMusicOnBack=false
HelpText=ScreenString("HelpTextOptions")
ShowFooter=true
FooterOnCommand=draworder,-1;

ContainerOnCommand=zoom,1.1;accelerate,0.3;diffusealpha,1;
ContainerOffCommand=accelerate,0.3;diffusealpha,0

RowInitCommand=diffusealpha,0;
RowOnCommand=linear,0.2;diffusealpha,1;draworder,-1
RowOffCommand=linear,0.2;diffusealpha,0
RowPositionTransformFunction=function(self,positionIndex,itemIndex,numItems) self:y( (_screen.cy-180) + (32*positionIndex) ); end
NumRowsShown=10

LineHighlightP1OnCommand=visible,false
LineHighlightP2OnCommand=visible,false

ShowOptionIcons=false
SeparateExitRow=false

TweenSeconds=0.1
CursorTweenSeconds=0.1

ExplanationP1X=SCREEN_LEFT+40
ExplanationP1Y=SCREEN_BOTTOM-65
ExplanationP1OnCommand=draworder,1;zoom,0.75;diffuse,Color.Black;_wrapwidthpixels,_screen.cx*1.5;halign,0;valign,0;cropright,1;linear,0.5;cropright,0;vertspacing,-8
ExplanationP1OffCommand=

ExplanationP2X=WideScale(SCREEN_RIGHT-100,SCREEN_RIGHT-200)
ExplanationP2Y=SCREEN_BOTTOM-65
ExplanationP2OnCommand=draworder,1;zoom,0.75;diffuse,Color.Black;_wrapwidthpixels,_screen.cx*1.5;halign,1;valign,0;cropright,1;linear,0.5;cropright,0;vertspacing,-8
ExplanationP2OffCommand=

ExplanationTogetherX=40
ExplanationTogetherY=_screen.cy+180
ExplanationTogetherOnCommand=zoom,0.5;diffuse,Color.Black;_wrapwidthpixels,_screen.w*1.75;halign,0;vertspacing,-8

BulletX=_screen.cx-_screen.cy
BulletOnCommand=visible,false

ItemsGapX=12
ItemsMinBaseZoom=0.55
ItemsOnCommand=zoom,0.55;
ItemGainFocusCommand=
ItemLoseFocusCommand=

ColorSelected=color("1,1,1,1")
ColorNotSelected=color("0.85,0.85,0.85,1")
CursorOnCommand=zoomx,1.33

DisqualifyP1X=_screen.cx - WideScale(0,15) - WideScale(177,200)
DisqualifyP1Y=SCREEN_TOP+48
DisqualifyP1OnCommand=zoom,0.25;horizalign,right;diffuse,PlayerColor(PLAYER_1)

DisqualifyP2X=_screen.cx - WideScale(0,15) + WideScale(177,200)
DisqualifyP2Y=SCREEN_TOP+48
DisqualifyP2OnCommand=zoom,0.25;horizalign,left;diffuse,PlayerColor(PLAYER_2)



[ScreenOptionsSimple]
RowPositionTransformFunction=function(self,positionIndex,itemIndex,numItems) self:y( (_screen.cy-180) + (32*positionIndex) ); end
StopMusicOnBack=false
SeparateExitRow=false
ExplanationTogetherX=_screen.cx-25
ExplanationTogetherOnCommand=%function(self) \
	self:zoom(0.725):_wrapwidthpixels(_screen.w/self:GetZoom()):vertspacing(-8) \
	self:diffuse(ThemePrefs.Get("RainbowMode") and Color.White or Color.Black) \
end
OptionRowNormalMetricsGroup="OptionRowSimple"
OptionRowExitMetricsGroup="OptionRowSimpleExit"
CursorOnCommand=visible,false
ShowCreditDisplay=false


###########################################################################
###		Operator Menu
###########################################################################

[ScreenOptionsService]
Fallback="ScreenOptionsSimple"
OptionRowNormalMetricsGroup="OptionRowSimpleService"
PrevScreen=Branch.TitleMenu()
NextScreen=Branch.TitleMenu()
FooterOnCommand=visible,false

# Don't let the engine handle Screen canceling; implement it in Lua for this screen
# so that we can warn the player about the dangers of using Simply Thonk + D3D
# and redirect them to change their Visual Style or VideoRenderer, if needed.
HandleBackButton=false

NumRowsShown=10

# remove ClearCredits if we're not in CoinMode_Pay; it doesn't make sense to show for at-home players
# note that (EventMode + CoinMode_Pay) will actually place you in CoinMode_Home
#
# remove CustomSongs if the corresponding preferences don't exist in Preferences.ini
# CustomSongs wasn't added until 5.1 beta, but SL still supports 5.0.12 for now
LineNames=(function() \
   local lines = "SystemOptions,MapControllers,TestInput,InputOptions,GraphicsSoundOptions,VisualOptions,ArcadeOptions,AdvancedOptions,MenuTimerOptions,USBProfileOptions,OptionsManageProfiles,ThemeOptions,StepManiaCredits,ClearCredits,Reload" \
   if GAMESTATE:GetCoinMode() ~= "CoinMode_Pay" then lines = lines:gsub("ClearCredits,", "") end \
   if not PREFSMAN:PreferenceExists("CustomSongsEnable") then lines = lines:gsub("USBProfileOptions,", "") end \
   return lines \
end)()
LineSystemOptions="gamecommand;screen,ScreenSystemOptions;name,SystemOptions"
LineMapControllers="gamecommand;screen,ScreenMapControllers;name,Key Joy Mappings"
LineTestInput="gamecommand;screen,ScreenTestInput;name,Test Input"
LineInputOptions="gamecommand;screen,ScreenInputOptions;name,InputOptions"
LineGraphicsSoundOptions="gamecommand;screen,ScreenGraphicsSoundOptions;name,GraphicsSoundOptions"
LineVisualOptions="gamecommand;screen,ScreenVisualOptions;name,VisualOptions"
LineArcadeOptions="gamecommand;screen,ScreenArcadeOptions;name,ArcadeOptions"
LineAdvancedOptions="gamecommand;screen,ScreenAdvancedOptions;name,AdvancedOptions"
LineMenuTimerOptions="gamecommand;screen,ScreenMenuTimerOptions;name,MenuTimerOptions"
LineUSBProfileOptions="gamecommand;screen,ScreenUSBProfileOptions;name,USBProfileOptions"
LineOptionsManageProfiles="gamecommand;screen,ScreenOptionsManageProfiles;name,Profiles"
LineAppearance="gamecommand;screen,ScreenAppearanceOptions;name,AppearanceOptions"
LineThemeOptions="gamecommand;screen,ScreenThemeOptions;name,ThemeOptions"
LineStepManiaCredits="gamecommand;screen,ScreenCredits;name,StepMania Credits"
LineClearCredits="gamecommand;clearcredits;name,Clear Credits"

ExplanationTogetherOnCommand=visible,false

[ScreenSystemOptions]
Fallback="ScreenOptionsServiceChild"
PrevScreen="ScreenOptionsService"
NextScreen="ScreenOptionsService"

LineNames="Game,Theme,Language,Announcer,DefaultNoteSkin,EditorNoteSkin"
LineGame="conf,Game"
LineTheme="lua,OperatorMenuOptionRows.Theme()"
LineLanguage="conf,Language"
LineAnnouncer="conf,Announcer"
LineDefaultNoteSkin="conf,DefaultNoteSkin"
LineEditorNoteSkin="lua,OperatorMenuOptionRows.EditorNoteskin()"

[ScreenPromptToResetPreferencesToStock]
Fallback="ScreenWithMenuElements"
PrevScreen="ScreenSystemOptions"
NextScreen="ScreenOptionsService"
HeaderOnCommand=visible,false
FooterOnCommand=visible,false
ShowCreditDisplay=false

# ScreenGameplaySyncMachine is currently not accessible in Simply Love.
# I haven't thought of a good way to handle/explain ITG's +9ms bias in a way
# that the average player can easily comprehend in order to make an informed
# decision about sync.  So... just don't let players get in here for now.
[ScreenGameplaySyncMachine]
PrevScreen="ScreenOptionsService"
NextScreen="ScreenOptionsService"


[ScreenOptionsServiceSub]
Fallback="ScreenOptionsService"
NextScreen="ScreenOptionsService"
PrevScreen="ScreenOptionsService"

[ScreenVisualOptions]
Fallback="ScreenOptionsServiceSub"
LineNames="AppearanceOptions,Set BG Fit Mode,Overscan Correction"
LineAppearanceOptions="gamecommand;screen,ScreenAppearanceOptions;name,AppearanceOptions"
LineSet BG Fit Mode="gamecommand;screen,ScreenSetBGFit;name,Set BG Fit Mode"
LineOverscan Correction="gamecommand;screen,ScreenOverscanConfig;name,Overscan Correction"

[ScreenAppearanceOptions]
PrevScreen="ScreenVisualOptions"
NextScreen="ScreenVisualOptions"

LineNames="Center1Player,ShowBanners,BGBrightness,RandomBackgroundMode,NumBackgrounds,ShowLyrics,ShowNativeLanguage,ShowDancingCharacters"
LineShowNativeLanguage="conf,ShowNativeLanguage"
LineShowLyrics="conf,ShowLyrics"
LineShowBanners="conf,ShowBanners"
LineBGBrightness="conf,BGBrightness"
LineRandomBackgroundMode="conf,RandomBackgroundMode"
LineNumBackgrounds="conf,NumBackgrounds"
LineCenter1Player="conf,Center1Player"
LineShowDancingCharacters="conf,ShowDancingCharacters"


[ScreenGraphicsSoundOptions]
Fallback="ScreenOptionsServiceChild"
# Start with all possible OptionRows, and remove RefreshRate and FSType if the corresponding
# functions aren't available; they were both added in 5.1 but SL also supports 5.0.12 for now
# Remove DisplayMode from macOS for now; this is still broken in 5.1-beta and can cause players to get stuck.
LineNames=(function() \
   local lines = "VideoRenderer,DisplayMode,DisplayAspectRatio,DisplayResolution,RefreshRate,FullscreenType,DisplayColorDepth,HighResolutionTextures,MaxTextureResolution,TextureColorDepth,MovieColorDepth,SmoothLines,CelShadeModels,DelayedTextureDelete,Vsync,FastNoteRendering,ShowStats,AttractSoundFrequency,SoundVolume,EnableAttackSounds,EnableMineHitSound,GlobalOffsetSeconds,VisualDelaySeconds" \
	if type(ConfAspectRatio) ~= "function" then lines = lines:gsub("DisplayAspectRatio","DisplayAspectRatioConf") end \
	if type(ConfDisplayResolution) ~= "function" then lines = lines:gsub("DisplayResolution", "DisplayResolutionConf") end \
	if type(ConfDisplayMode) ~= "function" then lines = lines:gsub("DisplayMode,", "") end \
   if type(ConfRefreshRate) ~= "function" then lines = lines:gsub("RefreshRate,", "") end \
   if type(ConfFullscreenType) ~= "function" then lines = lines:gsub("FullscreenType,", "") end \
   if HOOKS:GetArchName():lower():match("mac") then lines = lines:gsub("DisplayMode,","") end \
   return lines \
end)()

# SM5.0.12 uses conf,ConfAspectRatio
# SM5.1 moved it to Lua so resolution OptionRow choices could dynamically update as current AspectRatio choice changed
LineDisplayAspectRatioConf="conf,DisplayAspectRatio"
LineDisplayAspectRatio="lua,ConfAspectRatio()"

# similar with DisplayResolution
LineDisplayResolutionConf="conf,DisplayResolution"
LineDisplayResolution="lua,ConfDisplayResolution()"

LineDisplayMode="lua,ConfDisplayMode()"
LineRefreshRate="conf,RefreshRate"
LineFullscreenType="lua,ConfFullscreenType()"
LineVideoRenderer="lua,OperatorMenuOptionRows.VideoRenderer()"
LineDisplayColorDepth="conf,DisplayColorDepth"
LineHighResolutionTextures="conf,HighResolutionTextures"
LineMaxTextureResolution="conf,MaxTextureResolution"
LineTextureColorDepth="conf,TextureColorDepth"
LineMovieColorDepth="conf,MovieColorDepth"
LineSmoothLines="conf,SmoothLines"
LineCelShadeModels="conf,CelShadeModels"
LineDelayedTextureDelete="conf,DelayedTextureDelete"
LineVsync="conf,Vsync"
LineFastNoteRendering="conf,FastNoteRendering"
LineShowStats="conf,ShowStats"
LineAttractSoundFrequency="conf,AttractSoundFrequency"
LineSoundVolume="conf,SoundVolume"
LineEnableAttackSounds="conf,EnableAttackSounds"
LineEnableMineHitSound="conf,EnableMineHitSound"
LineGlobalOffsetSeconds="lua,OperatorMenuOptionRows.GlobalOffsetSeconds()"
LineVisualDelaySeconds="lua,OperatorMenuOptionRows.VisualDelaySeconds()"


[ScreenSetBGFit]
PrevScreen="ScreenVisualOptions"
NextScreen="ScreenVisualOptions"
FooterOnCommand=visible,false
ShowCreditDisplay=false

[ScreenOverscanConfig]
PrevScreen="ScreenVisualOptions"
NextScreen="ScreenVisualOptions"


# StepMania 5 Credits as provided by the _fallback theme
[ScreenCredits]
PrevScreen="ScreenOptionsService"
NextScreen="ScreenOptionsService"
HeaderOnCommand=visible,false
FooterOnCommand=visible,false
ShowCreditDisplay=false



# remove AxisFix if we're on macOS; it is not implemented on macOS (and may never be?)
# see: https://github.com/stepmania/stepmania/pull/585
[ScreenInputOptions]
Fallback="ScreenOptionsServiceChild"
LineNames=(function() \
	local lines = "AutoMap,OnlyDedicatedMenu,OptionsNav,Debounce,ThreeKey,AxisFix" \
	if HOOKS:GetArchName():lower():match("mac") or IsSMVersion(5, 3) then \
		lines = lines:gsub(",AxisFix","") \
	end \
	return lines \
end)()
LineAutoMap="conf,AutoMapOnJoyChange"
LineOnlyDedicatedMenu="conf,OnlyDedicatedMenuButtons"
LineOptionsNav="conf,ArcadeOptionsNavigation"
LineDebounce="conf,InputDebounceTime"
LineThreeKey="conf,ThreeKeyNavigation"
LineAxisFix="conf,AxisFix"



[ScreenArcadeOptions]
Fallback="ScreenOptionsServiceChild"
LineNames="Event,Coin,CoinsPerCredit,Premium,SongsPerPlay,Long Time,Marathon Time,HighScoresWithSameName,ComboContinues,Disqualification,FailOffForFirstStageEasy,FailOffInBeginner,LockCourseDifficulties,NumberOfHighScoresPerListForMachine,NumberOfHighScoresPerListPerPlayer"
LineEvent="conf,EventMode"
LineCoin="conf,CoinMode"
LineCoinsPerCredit="conf,CoinsPerCredit"
LinePremium="conf,Premium"

LineSongsPerPlay="conf,SongsPerPlay"
LineOptionsNavigation="conf,ArcadeOptionsNavigation"
LineMenuButtons="conf,OnlyDedicatedMenuButtons"

LineLong Time="lua,OperatorMenuOptionRows.LongAndMarathonTime('Long')"
LineMarathon Time="lua,OperatorMenuOptionRows.LongAndMarathonTime('Marathon')"

LineHighScoresWithSameName="conf,AllowMultipleHighScoreWithSameName"
LineComboContinues="conf,ComboContinuesBetweenSongs"
LineDisqualification="conf,Disqualification"
LineFailOffForFirstStageEasy="conf,FailOffForFirstStageEasy"
LineFailOffInBeginner="conf,FailOffInBeginner"
LineLockCourseDifficulties="conf,LockCourseDifficulties"
LineNumberOfHighScoresPerListForMachine="conf,MaxHighScoresPerListForMachine"
LineNumberOfHighScoresPerListPerPlayer="conf,MaxHighScoresPerListForPlayer"


# Simply Love Options
[ScreenThemeOptions]
Fallback="ScreenOptionsServiceChild"
OptionRowNormalMetricsGroup="OptionRowSimplyLoveOptions"

LineNames=(function() \
   	local lines = "VisualStyle,RainbowMode,,MusicWheelSpeed,,MusicWheelStyle,AutoStyle,DefaultGameMode,AllowFailingOutOfSet,NumberOfContinuesAllowed,CasualMaxMeter,SelectProfile,SelectColor,EvalSummary,NameEntry,GameOver,HideStockNoteSksins,DanceSolo,Nice,WriteCustomScores" \
   	if Sprite.LoadFromCached ~= nil then lines = lines .. ",UseImageCache" end \
      return lines \
end)()
LineCasualMaxMeter="lua,ThemePrefsRows.GetRow('CasualMaxMeter')"

LineAutoStyle="lua,ThemePrefsRows.GetRow('AutoStyle')"
LineDefaultGameMode="lua,ThemePrefsRows.GetRow('DefaultGameMode')"

LineAllowFailingOutOfSet="lua,ThemePrefsRows.GetRow('AllowFailingOutOfSet')"
LineNumberOfContinuesAllowed="lua,ThemePrefsRows.GetRow('NumberOfContinuesAllowed')"
LineMusicWheelStyle="lua,ThemePrefsRows.GetRow('MusicWheelStyle')"
LineMusicWheelSpeed="lua,OperatorMenuOptionRows.MusicWheelSpeed()"

LineSelectProfile="lua,ThemePrefsRows.GetRow('AllowScreenSelectProfile')"
LineSelectColor="lua,ThemePrefsRows.GetRow('AllowScreenSelectColor')"
LineEvalSummary="lua,ThemePrefsRows.GetRow('AllowScreenEvalSummary')"
LineNameEntry="lua,ThemePrefsRows.GetRow('AllowScreenNameEntry')"
LineGameOver="lua,ThemePrefsRows.GetRow('AllowScreenGameOver')"

LineHideStockNoteSksins="lua,ThemePrefsRows.GetRow('HideStockNoteSkins')"
LineDanceSolo="lua,ThemePrefsRows.GetRow('AllowDanceSolo')"

LineNice="lua,ThemePrefsRows.GetRow('nice')"
LineVisualStyle="lua,ThemePrefsRows.GetRow('VisualStyle')"
LineRainbowMode="lua,ThemePrefsRows.GetRow('RainbowMode')"

LineUseImageCache="lua,ThemePrefsRows.GetRow('UseImageCache')"
LineWriteCustomScores="lua,ThemePrefsRows.GetRow('WriteCustomScores')"


[ScreenMenuTimerOptions]
Fallback="ScreenOptionsServiceChild"
LineNames="MenuTimer,ScreenSelectMusicMenuTimer,ScreenSelectMusicCasualMenuTimer,ScreenPlayerOptionsMenuTimer,ScreenEvaluationMenuTimer,ScreenEvaluationSummaryMenuTimer,ScreenNameEntryMenuTimer"

LineMenuTimer="conf,MenuTimer"
LineScreenSelectMusicMenuTimer="lua,ThemePrefsRows.GetRow('ScreenSelectMusicMenuTimer')"
LineScreenSelectMusicCasualMenuTimer="lua,ThemePrefsRows.GetRow('ScreenSelectMusicCasualMenuTimer')"
LineScreenPlayerOptionsMenuTimer="lua,ThemePrefsRows.GetRow('ScreenPlayerOptionsMenuTimer')"
LineScreenEvaluationMenuTimer="lua,ThemePrefsRows.GetRow('ScreenEvaluationMenuTimer')"
LineScreenEvaluationSummaryMenuTimer="lua,ThemePrefsRows.GetRow('ScreenEvaluationSummaryMenuTimer')"
LineScreenNameEntryMenuTimer="lua,ThemePrefsRows.GetRow('ScreenNameEntryMenuTimer')"

[ScreenUSBProfileOptions]
Fallback="ScreenOptionsServiceChild"
LineNames="MemoryCards,CustomSongs,MaxCount,CustomSongsLoadTimeout,CustomSongsMaxSeconds,CustomSongsMaxMegabytes"

LineMemoryCards="lua,OperatorMenuOptionRows.MemoryCards()"
LineCustomSongs="conf,CustomSongsEnable"
LineMaxCount="conf,CustomSongsMaxCount"
LineCustomSongsLoadTimeout="lua,OperatorMenuOptionRows.CustomSongsLoadTimeout()"
LineCustomSongsMaxSeconds="lua,OperatorMenuOptionRows.CustomSongsMaxSeconds()"
LineCustomSongsMaxMegabytes="lua,OperatorMenuOptionRows.CustomSongsMaxMegabytes()"



[ScreenAdvancedOptions]
Fallback="ScreenOptionsServiceChild"
LineNames="DefaultFailType,TimingWindowScale,LifeDifficulty,AllowW1,HiddenSongs,EasterEggs,AllowExtraStage,UseUnlockSystem,AutogenSteps,AutogenGroupCourses,FastLoad,PercentageScoring,SongDeletion"
LineDefaultFailType="conf,DefaultFailType"
LineTimingWindowScale="conf,TimingWindowScale"
LineLifeDifficulty="conf,LifeDifficulty"
LineAllowW1="conf,AllowW1"
LineHiddenSongs="conf,HiddenSongs"
LineEasterEggs="conf,EasterEggs"
LineAllowExtraStage="conf,AllowExtraStage"
LineUseUnlockSystem="conf,UseUnlockSystem"
LineAutogenSteps="conf,AutogenSteps"
LineAutogenGroupCourses="conf,AutogenGroupCourses"
LineFastLoad="conf,FastLoad"
LinePercentageScoring="conf,PercentageScoring"
LineSongDeletion="conf,AllowSongDeletion"


[ScreenMapControllers]
LabelP1OnCommand=visible,false
LabelP1OffCommand=

LabelP2OnCommand=visible,false
LabelP2OffCommand=

DevicesX=_screen.cx
DevicesY=SCREEN_TOP+25
DevicesOnCommand=zoom,16/24;strokecolor,color("#222222EE");diffusealpha,0;linear,0.5;diffusealpha,1;
DevicesOffCommand=linear,0.5;diffusealpha,0

LineScrollerOnCommand=%function(self) \
	self:visible(false); \
	self:y(42); \
	self:setsecondsperitem(0.05); \
	self:SetTransformFromHeight(24); \
end;

PrimaryOnCommand=x,_screen.cx;y,-6;zoom,16/24
SecondaryOnCommand=x,_screen.cx;y,6;zoom,12/24
MappedToOnCommand=zoom,16/24;diffuse,color("#808080");maxwidth,150

ListHeaderGainFocusCommand=%function(self) \
    MESSAGEMAN:Broadcast("MapControllersFocusChanged",{bmt=self}) \
    self:diffuse(color("#808080")):diffuseshift():effectcolor2(color("#808080")):effectcolor1(color("#FFFFFF")) \
end
MappedToGainFocusCommand=%function(self) \
    MESSAGEMAN:Broadcast("MapControllersFocusChanged",{bmt=self}) \
    self:diffuseshift():effectcolor2(color("#808080")):effectcolor1(color("#FFFFFF")) \
end
MappedToLoseFocusCommand=%function(self) \
    MESSAGEMAN:Broadcast("MapControllersFocusLost") \
    self:diffuse(color("#808080")):stopeffect() \
end

[ScreenTestInput]
PrevScreen="ScreenOptionsService"
NextScreen="ScreenOptionsService"
HeaderOnCommand=visible,false
FooterOnCommand=visible,false


[ScreenOptionsManageProfiles]
OptionRowNormalMetricsGroup="OptionRowManageLocalProfiles"
OptionRowExitMetricsGroup="OptionRowManageLocalProfilesExit"
ExplanationTogetherY=_screen.cy+180


[OptionRowManageLocalProfiles]
Fallback="OptionRowSimple"

# Underlines make sense in normal OptionRows where there are multiple items to choose from
# (for example, ScreenPlayerOptions) for each OptionRow, but ScreenOptionsManageProfiles is a
# very specific, very peculiar (hackish) use of OptionRows.  We aren't using each OptionRow to choose
# from a variety of choices; we're having each OptionRow represent a single choice (a local profile).
# This re-use of code is confusing to programmers, and displaying underlines where they do not
# denote any meaning is confusing to players.  So don't show underlines.
ShowUnderlines=false

# the "Item" of these OptionRows in ScreenOptionsManageProfiles will be
# one of "P1", "P2", or "" depending on whether the local profile
# this OptionRow represents is currently assigned to a particular player
ItemOnCommand=zoom,0.75
ItemsStartX=220

[OptionRowManageLocalProfilesExit]
Fallback="OptionRowManageLocalProfiles"
ItemOnCommand=visible,false


###########################################################################
###		MiniMenu stuff
###########################################################################

[ScreenMiniMenu]
HeaderOnCommand=visible,false
FooterOnCommand=visible,false
RowPositionTransformFunction=function(self,positionIndex,itemIndex,numItems) \
	self:y((_screen.h/numItems) * positionIndex + (_screen.h/numItems) * 0.5) \
end

[OptionRowMiniMenu]
Fallback="OptionRowSimple"

FrameX=_screen.cx
FrameOnCommand=diffusealpha,0.95
FrameGainFocusCommand=diffuse,color("#293238");diffusealpha,0.95
FrameLoseFocusCommand=diffuse,color("#071016");diffusealpha,0.95
FrameDisabledCommand=diffuse,color("#040404");diffusealpha,0.95

TitleX=_screen.cx-200
TitleOnCommand=halign,0

ItemsStartX=_screen.cx-150
ItemsEndX=_screen.cx+280
ItemsGapX=14

ItemsLongRowP1X=_screen.cx-60
ItemsLongRowP2X=_screen.cx+100
ItemsLongRowSharedX=_screen.cx+150
ItemOnCommand=

ColorSelected=color("0.5,1,0.5,1")
ColorNotSelected=color("1,1,1,1")
ColorDisabled=color("0.65,0,0,1")
TweenSeconds=0

# "Return" in Edit Mode
[ScreenMiniMenuAreaMenu]
Fallback="ScreenMiniMenu"
RowPositionTransformFunction=function(self,offsetFromCenter,index,numItems) \
	local row_height = 32 \
	local scale_factor = 1 \
	if row_height * numItems > _screen.h then \
		scale_factor = ((_screen.h/numItems) / 32) \
		row_height = row_height * scale_factor \
		self:zoom(scale_factor) \
		self:x( _screen.cx - (_screen.cx * scale_factor)) \
	end \
	if numItems % 2 == 0 then \
		self:y( (_screen.h * 0.5) + row_height*(index - math.floor(numItems*0.5)) + row_height*0.5 ) \
	else \
		self:y( (_screen.h * 0.5) + row_height*(index - math.floor(numItems*0.5)) ) \
	end \
end

# "Escape" in Edit Mode
[ScreenMiniMenuMainMenu]
Fallback="ScreenMiniMenuAreaMenu"
# "Escape" and then "Edit Steps Information"
[ScreenMiniMenuStepsInformation]
Fallback="ScreenMiniMenuAreaMenu"


# "F4" in Edit Mode
[ScreenMiniMenuTimingDataInformation]
Fallback="ScreenMiniMenuAreaMenu"

[OptionRowMiniMenuTimingDataInformation]
Fallback="OptionRowMiniMenu"
TitleOnCommand=zoom,0.9;valign,0.65
ItemOnCommand=zoom,0.9;valign,0.65

# "F1" in Edit Mode
[ScreenMiniMenuEditHelp]
RowPositionTransformFunction=function(self,positionIndex,itemIndex,numItems) \
	if itemIndex < numItems/2 then \
		self:x( _screen.cx * 0.5 ) \
	else \
		self:x( _screen.cx * 1.7 ) \
	end \
	self:y(32 * (itemIndex % (numItems/2))) \
end

# "B" in Edit Mode
[ScreenMiniMenuBackgroundChange]
OptionRowNormalMetricsGroup="OptionRowMiniMenuBackgroundChange"
RowPositionTransformFunction=function(self,positionIndex,itemIndex,numItems) \
	self:y((_screen.h/numItems) * positionIndex + (_screen.h/numItems) * 0.5 + 5) \
end
[OptionRowMiniMenuBackgroundChange]
Fallback="OptionRowMiniMenu"
TitleOnCommand=halign,0;y,-5
ItemOnCommand=y,-5


[OptionRowMiniMenuEditHelp]
Fallback="OptionRowMiniMenu"

FrameX=0
FrameOnCommand=diffuse,color("#071016");diffusealpha,0.95;halign,1
TitleOnCommand=x,0;halign,1
ItemOnCommand=x,10;halign,0

ColorDisabled=PlayerColor(PLAYER_1)


# the "overlay" that appears in ScreenOptionsManageProfiles while editing an existing local profile
[ScreenMiniMenuContext]
Class="ScreenMiniMenu"
Fallback="ScreenOptionsSimple"
PrevScreen=
TimerSeconds=-1
ShowHelp=false
OptionRowNormalMetricsGroup="OptionRowMiniMenuContext"

ContainerOnCommand=diffusealpha,1
ShowExplanations=false
# ShowExitRow must be false for this use of OptionRows in ScreenOptionsManageProfiles
# having a dedicated OptionRow for Exit here can break input handling — pressing START
# will move the player to the end of the list of OptionRows (the Exit row) instead of
# choosing that OptionRow and having it *do* something (like bring up an overlay to
# rename the profile)
ShowExitRow=false

[OptionRowMiniMenuContext]
TitleX=_screen.cx - 345
TitleOnCommand=zoom,0.8; halign,0; maxwidth,270;
TitleGainFocusCommand=diffuse,PlayerColor(PLAYER_1)
TitleLoseFocusCommand=diffuse,color("#FFFFFF")
TitleDisabledCommand=diffuse,color("#DDDDDD")

FrameX=_screen.cx - 240
FrameOnCommand=
FrameGainFocusCommand=diffuse,color("#293238")
FrameLoseFocusCommand=diffuse,color("#071016")
FrameDisabledCommand=diffuse,color("#040404")

###########################################################################
###		end MiniMenu stuff
###########################################################################



###########################################################################
###		DEBUG SCREENS
###########################################################################

[ScreenSystemLayer]
CreditsP1X=SCREEN_LEFT+WideScale(38, 45)
CreditsP1Y=_screen.h-9
CreditsP1OnCommand=horizalign,left;vertalign,bottom;zoom,WideScale(0.8, 0.9);

CreditsP2X=SCREEN_RIGHT-WideScale(38, 45)
CreditsP2Y=_screen.h-9
CreditsP2OnCommand=horizalign,right;vertalign,bottom;zoom,WideScale(0.8, 0.9);

MessageX=SCREEN_LEFT+16
MessageY=SCREEN_TOP+16
MessageOnCommand=finishtweening;halign,0;x,SCREEN_LEFT+20;y,SCREEN_TOP+80;zoom,0.5;shadowlength,2;diffusealpha,1
MessageOffCommand=sleep,5;linear,0.5;diffusealpha,0

MessageFrameX=_screen.cx
MessageFrameY=SCREEN_TOP+28
MessageFrameOnCommand=
MessageFrameOffCommand=

# this is for the visual stats overlays that appear when a user presses F3+6
[ScreenStatsOverlay]
StatsX=SCREEN_RIGHT-16
StatsY=SCREEN_TOP+16
StatsOnCommand=halign,1;valign,0;zoom,0.65
SkipY=_screen.h - 85









[MusicWheel]
ShowRoulette=false
ShowPortal=false
ShowRandom=false
RandomPicksLockedSongs=false

OnlyShowActiveSection=ThemePrefs.Get("MusicWheelStyle")=="IIDX"
HideActiveSectionTitle=false

# MusicWheel Commands
ItemTransformFunction=function(self,offsetFromCenter,itemIndex,numItems) self:y(offsetFromCenter * _screen.h/15) end
NumWheelItems=17
MostPlayedSongsToShow=50

# WheelItem Commands
MusicWheelItemSortOnCommand=zoomy,0;accelerate,0.2;zoomy,1
MusicWheelItemSortOffCommand=decelerate,0.2;zoomy,0

# Highlight Commands
HighlightOnCommand=%function(self) \
	if DarkUI() then \
		self:diffuseshift():effectcolor1(0.8,0.8,0.8,0.15):effectcolor2(0.1,0.1,0.1,0.15):effectclock("beatnooffset"):effectperiod(2) \
	else \
		self:diffuseshift():effectcolor1(0.8,0.8,0.8,0.15):effectcolor2(0.8,0.8,0.8,0.05):effectclock("beatnooffset"):effectperiod(2) \
	end \
end
HighlightOffCommand=decelerate,0.2;diffusealpha,0


[MusicWheelItem]
# hack to recolor song titles back EVERY SetCommand (i.e. a lot)
SongNameSetCommand=%function(self,item) \
	self:diffuse(ThemePrefs.Get("RainbowMode") and color("#0a141b") or Color.White) \
	if item.Song and item.Song:GetMainTitle()=="DVNO" then self:diffuse(1,0.8,0,1) end \
end
SectionCollapsedSetCommand=%function(self) DiffuseEmojis(self) end
SectionExpandedSetCommand=%function(self) DiffuseEmojis(self) end

CourseOnCommand=halign,0;x,WideScale(65, 104);maxwidth,WideScale(270,350);zoom,0.85

# ensure that very long titles don't go off-screen
SectionExpandedOnCommand=maxwidth,WideScale(240,310)
SectionCollapsedOnCommand=maxwidth,WideScale(240,310)

SectionExpandedX=WideScale(150, 204)
SectionCollapsedX=WideScale(150, 204)
RouletteX=WideScale(150, 204)
RandomX=WideScale(150, 204)
PortalX=WideScale(150, 204)

SectionCountX=_screen.w/2 - WideScale(9, 10)
SectionCountOnCommand=horizalign,right;zoom,0.75
SectionCountSetCommand=%function(self) \
	if ThemePrefs.Get("nice") > 0 and self:GetText()=="69" then \
		self:settext("nice") \
	end \
end
RandomOnCommand=diffuseshift;effectcolor1,color("1,1,1,1");effectcolor2,color("#88EEFF");effectperiod,10;shadowlength,2

WheelNotifyIconOnCommand=visible,false

GradeP1X=WideScale(38,50)
GradeP1Y=-0
GradeP2X=WideScale(54,80)
GradeP2Y=0
GradesShowMachine=false

[TimingData]
GetReturnsNumbers=true

[TextBanner]
TitleOnCommand=halign,0;x,WideScale(65, 104);maxwidth,WideScale(270,350);zoom,0.85
SubtitleOnCommand=halign,0;x,WideScale(65, 104);maxwidth,WideScale(270,350);zoom,0.7
ArtistOnCommand=visible,false
AfterSetCommand=%TextBannerAfterSet


[FadingBanner]
BannerFadeFromCachedCommand=stoptweening;accelerate,0.1;diffusealpha,0


[ScreenSelectMusicCasual]
Fallback="ScreenWithMenuElements"
NextScreen="ScreenGameplay"

HeaderOnCommand=visible,false
ShowCreditDisplay=false
RepeatRate=10
RepeatDelay=0.5

CodeNames="Exit,CancelSingleSong"
CodeExit="MenuLeft,MenuLeft,MenuRight,MenuRight,MenuLeft,MenuLeft,MenuRight,MenuRight"
CodeCancelSingleSong=PREFSMAN:GetPreference("ThreeKeyNavigation") and "MenuLeft-MenuRight" or ""

TimerMetricsGroup="MenuTimer"
TimerOnCommand=hide_if,not PREFSMAN:GetPreference("MenuTimer");draworder,102;
TimerSeconds=SL.Global.MenuTimer.ScreenSelectMusicCasual

[ScreenSelectMusic]
PrevScreen=Branch.SSMCancel()
NextScreen=Branch.AfterSelectMusic()

CodeNames="SortList,SortList2,SortList3,EscapeFromEventMode"
CodeSortList="@Select-Start"
CodeSortList2=PREFSMAN:GetPreference("OnlyDedicatedMenuButtons") and "MenuLeft-MenuRight" or GAMESTATE:GetCurrentGame():GetName() == "pump" and "DownLeft-DownRight"
CodeSortList3=not PREFSMAN:GetPreference("OnlyDedicatedMenuButtons") and "Left-Right" or ""
CodeEscapeFromEventMode=PREFSMAN:GetPreference("EventMode") and "MenuLeft,MenuLeft,MenuRight,MenuRight,MenuLeft,MenuLeft,MenuRight,MenuRight" or ""

# this allows us to override the normal sort select command
ModeMenuAvailable=false
SelectMenuAvailable=true
SelectMenuChangesDifficulty=true
TwoPartSelection=false

TimerMetricsGroup="MenuTimerFadeIn"
TimerOnCommand=hide_if,not PREFSMAN:GetPreference("MenuTimer");draworder,102;
TimerSeconds=SL.Global.MenuTimer.ScreenSelectMusic

SampleMusicLoops=true
SampleMusicFallbackFadeInSeconds=1.5
DoRouletteOnMenuTimer=false

BannerX=0
BannerY=0
BannerOnCommand=scaletoclipped,418,164;visible,false;

HeaderOnCommand=draworder,101
FooterOnCommand=draworder,101

# wheel
MusicWheelX=_screen.cx
MusicWheelY=_screen.cy
MusicWheelOffCommand=linear,0.2;diffusealpha,0;

MusicWheelCodeMessageCommand=%function(self, params) \
	if not GAMESTATE:IsCourseMode() and (params.Name:match("SortList")) then \
		SCREENMAN:GetTopScreen():GetChild("Overlay"):queuecommand("DirectInputToSortMenu") \
	end; \
end
MusicWheelSortMessageCommand=%function(self, params) \
	self:ChangeSort('SortOrder_'..params.order) \
end


[ScreenSelectCourse]
Class="ScreenSelectMusic"
Fallback="ScreenSelectMusic"

MusicWheelType="CourseWheel"
Codes="CourseCodeDetector"

HelpText=ScreenString("HelpTextSelectCourse")

[CourseWheel]
Fallback="MusicWheel"



[ScreenSelectCourseNonstop]
Fallback="ScreenSelectCourse"
MusicWheelType="CourseWheel"
Codes="CourseCodeDetector"



# Set codes mostly to empty strings to
# override codes declared in _fallback theme.
[CodeDetector]
PrevSteps1=GetCodeForGame("PrevSteps1")
NextSteps1=GetCodeForGame("NextSteps1")

# Sorting should done via ScreenSelectMusic's SortMenu
# which is accessed via codes defined under [ScreenSelectMusic]
NextSort1=""
NextSort2=""
NextSort3=""
NextSort4=""
CloseCurrentFolder="Up-Down"

# This code can be used to navigate the player to whatever PrevScreen evaluates to
# for the current screen. It's a bit too broad to be useful.  Backing out of SelectMusic
# in EventMode is helpful, but accidentally backing out of Evaluation is typically not.
# Set to an empty string here so that it doesn't accidentally fire off.
BackInEventMode=""

# "pad codes" for gameplay modifiers; set each to an
# empty string so they aren't accidentally activated
Mirror=""
Left=""
Right=""
Shuffle=""
SuperShuffle=""
NextTransform=""
NextScrollSpeed=""
PreviousScrollSpeed=""
NextAccel=""
NextEffect=""
NextAppearance=""
NextTurn=""
Reverse=""
HoldNotes=""
Mines=""
Dark=""
NextGroup=""
PrevGroup=""
Hidden=""
RandomVanish=""

# this has been replaced with Lua-driven screenshot saving
SaveScreenshot1=""
SaveScreenshot2=""

[CourseCodeDetector]
Fallback="CodeDetector"


###########################################################################
###		GAMEPLAY
###########################################################################

[ScreenGameplay]
PrevScreen=SelectMusicOrCourse()
NextScreen=Branch.AfterGameplay()

HeaderOnCommand=hibernate,math.huge
FooterOnCommand=hibernate,math.huge

ShowCreditDisplay=false
MemoryCardIcons=false
GiveUpSeconds=0.33
MusicFadeOutSeconds=0.25
UsePauseMenuInsteadOfGiveUp=false

# Engine stuff we can cut out of the render pipeline
# Thanks, kyzentun.
ScoreP1OnCommand=hibernate,math.huge
ScoreP2OnCommand=hibernate,math.huge
LifeP1OnCommand=hibernate,math.huge
LifeP2OnCommand=hibernate,math.huge
SecondaryScoreP1OnCommand=hibernate,math.huge
SecondaryScoreP2OnCommand=hibernate,math.huge
StepsDisplayP1OnCommand=hibernate,math.huge
StepsDisplayP2OnCommand=hibernate,math.huge
StepsDescriptionP1OnCommand=hibernate,math.huge
StepsDescriptionP2OnCommand=hibernate,math.huge

# Thanks, teejusb.
PlayerP1OnePlayerOneSideX=_screen.cx - (clamp(_screen.w, 640, 854) * 0.25)
PlayerP2OnePlayerOneSideX=_screen.cx + (clamp(_screen.w, 640, 854) * 0.25)
PlayerP1TwoPlayersTwoSidesX=_screen.cx - (clamp(_screen.w, 640, 854) * 0.25)
PlayerP2TwoPlayersTwoSidesX=_screen.cx + (clamp(_screen.w, 640, 854) * 0.25)
PlayerP1OnePlayerBothSidesX=_screen.cx
PlayerP2OnePlayerBothSidesX=_screen.cx

[Combo]
ShowComboAt=4
ShowMissesAt=4
NumberMaxZoomAt=3000
LabelOnCommand=
NumberOnCommand=

[HoldJudgment]
HoldJudgmentLetGoCommand=diffuse,1,1,1,1;zoom,0.4;linear,0.3;zoom,0.5;sleep,0.5;linear,0;diffuse,1,1,1,0
HoldJudgmentHeldCommand=diffuse,1,1,1,1;zoom,0.4;linear,0.3;zoom,0.5;sleep,0.5;linear,0;diffuse,1,1,1,0

[StepsDisplayGameplay]
MeterOnCommand=visible,false

# ScreenPrompt is used when accepting/rejecting sync changes in gameplay.
# (Or maybe it's really ScreenSaveSync, but that doesn't have registered metrics.)
# ScreenPrompt is also used in various places throughout ScreenEdit and
# when accepting/rejecting changes to local profiles via the operator menu.
[ScreenPrompt]
HeaderOnCommand=visible,false
FooterOnCommand=visible,false

QuestionOnCommand=wrapwidthpixels,_screen.w-100

# Okay
Answer1Of1OnCommand=zoom,0.7

# Yes/No
Answer1Of2X=SCREEN_CENTER_X-100
Answer2Of2X=SCREEN_CENTER_X+100
Answer1Of2OnCommand=zoom,0.7
Answer2Of2OnCommand=zoom,0.7

# Yes/No/Cancel
Answer1Of3OnCommand=zoom,0.7
Answer2Of3OnCommand=zoom,0.7
Answer3Of3OnCommand=zoom,0.7


###########################################################################
###		Engine-based graphs used in ScreenEvaluation
###########################################################################

[GraphDisplay]
BodyWidth=(function() return (#GAMESTATE:GetHumanPlayers()==1 and 610 or 300) end)()
BodyHeight=64

[GraphDisplay1]
Fallback="GraphDisplay"
[GraphDisplay2]
Fallback="GraphDisplay"
[GraphDisplay3]
Fallback="GraphDisplay"
[GraphDisplay4]
Fallback="GraphDisplay"
[GraphDisplay5]
Fallback="GraphDisplay"
[GraphDisplay6]
Fallback="GraphDisplay"
[GraphDisplay7]
Fallback="GraphDisplay"
[GraphDisplay8]
Fallback="GraphDisplay"
[GraphDisplay9]
Fallback="GraphDisplay"
[GraphDisplay10]
Fallback="GraphDisplay"
[GraphDisplay11]
Fallback="GraphDisplay"
[GraphDisplay12]
Fallback="GraphDisplay"


###########################################################################
###		Evaluation and EvaluationSummary
###########################################################################

[ScreenEvaluation]
TimerSeconds=SL.Global.MenuTimer.ScreenEvaluation
ShowHeader=true
FooterOnCommand=visible,false
ShowCreditDisplay=false
ShowPlayerAvatar=true

BannerWidth=334
BannerHeight=132

CodeNames="Screenshot"
CodeScreenshot=PREFSMAN:GetPreference("ThreeKeyNavigation") and "MenuLeft-MenuRight" or "Select"

[ScreenEvaluationStage]
Fallback="ScreenEvaluation"
NextScreen=Branch.AfterEvaluationStage()

[ScreenEvaluationNonstop]
Fallback="ScreenEvaluation"
NextScreen="ScreenProfileSave"

[ScreenEvaluationSummary]
Fallback="ScreenEvaluation"
PrevScreen=Branch.AllowScreenNameEntry()
NextScreen=Branch.AllowScreenNameEntry()
TimerSeconds=SL.Global.MenuTimer.ScreenEvaluationSummary
ShowCreditDisplay=false
ShowPlayerAvatar=true

# when true, this metric appears to sum all of the player's Window types together
# for example, all W1 values are summed, all W2 values are summed, etc.
Summary=false

CodeNames="MenuLeft,MenuRight,MenuUp,MenuDown,Left,Right,Up,Down,DownLeft,DownRight,Screenshot"
CodeMenuLeft="MenuLeft"
CodeMenuRight="MenuRight"
CodeMenuUp="MenuUp"
CodeMenuDown="MenuDown"
CodeLeft="Left"
CodeRight="Right"
CodeUp="Up"
CodeDown="Down"
CodeDownLeft=GAMESTATE:GetCurrentGame():GetName() == "pump"  and "DownLeft" or ""
CodeDownRight=GAMESTATE:GetCurrentGame():GetName() == "pump" and "DownRight" or ""
CodeScreenshot=SL.Global.GameMode=="Casual" and "" or (PREFSMAN:GetPreference("ThreeKeyNavigation") and "MenuLeft-MenuRight" or "Select")


[RollingNumbersEvaluation]
Fallback="RollingNumbers"
Commify=false
LeadingZeroMultiplyColor=color("#444444")
ApproachSeconds=1

[RollingNumbersEvaluationA]
Fallback="RollingNumbersEvaluation"
TextFormat="%04.0f"

[RollingNumbersEvaluationB]
Fallback="RollingNumbersEvaluation"
TextFormat="%03.0f"

[RollingNumbersEvaluationNoDecentsWayOffs]
Fallback="RollingNumbersEvaluationA"
LeadingZeroMultiplyColor=color("#FFFFFF")


###########################################################################
###		Edit mode
###########################################################################

[ScreenEdit]
ShowCreditDisplay=false

# hide ScreenEdit's hardcoded HelpText and recreate it, now slightly more styled, via Lua
# See: ./BGAnimations/ScreenEdit underlay.lua
EditHelpOnCommand=hibernate,math.huge

InfoX=_screen.w-150
InfoY=20
InfoOnCommand=align,0,0;zoom,0.625;vertspacing,-1

SetModScreen="ScreenAttackMenu"

CurrentBeatFormat="%s:  %.3f\n"
CurrentSecondFormat="%s:  %.6f\n"
SnapToFormat="%s: %s\n"
SelectionBeatBeginFormat="%s:  %.3f"
SelectionBeatUnfinishedFormat=" ...\n"
SelectionBeatEndFormat="-%.3f\n"
DifficultyFormat="%s:  %s\n\n"

RoutinePlayerFormat="%s: %d\n"
DescriptionFormat="%s:  %s\n"
ChartNameFormat="%s:\n  %s\n"
StepAuthorFormat="%s:\n  %s\n"
ChartStyleFormat="%s:  %s\n"
MainTitleFormat="%s:\n  %s\n\n"
SubtitleFormat="%s:  %s\n"

SegmentTypeFormat="%s: %s\n"
TapNoteTypeFormat="%s: %s\n"

NumStepsFormat="\n%s: %d\n"
NumJumpsFormat="%s: %d\n"
NumHoldsFormat="%s: %d\n"
NumMinesFormat="%s: %d\n"
NumHandsFormat="%s: %d\n"
NumRollsFormat="%s: %d\n"
NumLiftsFormat="%s: %d\n"
NumFakesFormat="%s: %d\n"

NumStepsFormatTwoPlayer="%s: %d/%d\n"
NumJumpsFormatTwoPlayer="%s: %d/%d\n"
NumHoldsFormatTwoPlayer="%s: %d/%d\n"
NumMinesFormatTwoPlayer="%s: %d/%d\n"
NumHandsFormatTwoPlayer="%s: %d/%d\n"
NumRollsFormatTwoPlayer="%s: %d/%d\n"
NumLiftsFormatTwoPlayer="%s: %d/%d\n"
NumFakesFormatTwoPlayer="%s: %d/%d\n"

TimingModeFormat="\n%s: %s\n"
Beat0OffsetFormat="%s: %.3f secs\n"
PreviewStartFormat="%s: %.3f secs\n"
PreviewLengthFormat="%s: %.3f secs\n"

###########################################################################
###		ScreenEditMenu is where you choose which song you want to edit
###########################################################################

[StepsDisplay]
ShowMeter=true
MeterSetCommand=%function(self, param) MESSAGEMAN:Broadcast("MeterSet") end;
ShowDescription=true
DescriptionY=0
DescriptionX=-265
DescriptionOnCommand=zoom,0.8;horizalign,left;vertspacing,-9;_wrapwidthpixels,345
DescriptionSetCommand=%function(self,params) self:visible(params.Steps ~= nil and params.Steps:GetDifficulty()=="Difficulty_Edit")  end



[ScreenEditMenu]
PrevScreen="ScreenTitleMenu"
ExplanationY=SCREEN_BOTTOM-84
ExplanationOnCommand=_wrapwidthpixels,(_screen.w*0.8)*1.25;shadowlength,1;zoom,0.75
ExplanationOffCommand=diffusealpha,0

RepeatRate=50
RepeatDelay=0.25

[EditMenu]
Arrows1X=WideScale(_screen.cx-160,_screen.cx-180)
Arrows2X=WideScale(_screen.cx+250,_screen.cx+280)
ArrowsEnabledCommand=%function(self)  self:diffuse(color("1,1,1,1")); self:zoom(WideScale(0.7,0.75)); MESSAGEMAN:Broadcast("EditMenuChange") end
ArrowsDisabledCommand=%function(self) self:diffuse(color("1,1,1,0.2")); self:zoom(WideScale(0.7,0.75)); MESSAGEMAN:Broadcast("EditMenuChange") end

GroupBannerX=_screen.cx+166
GroupBannerY=_screen.cy-153
GroupBannerHeight=90
GroupBannerWidth=36
GroupBannerOnCommand=scaletoclipped,90,36

SongBannerX=_screen.cx+166
SongBannerY=_screen.cy-110
SongBannerHeight=90
SongBannerWidth=36
SongBannerOnCommand=scaletoclipped,90,36

SongTextBannerX=_screen.cx - WideScale(195,233)
SongTextBannerY=_screen.cy-111

StepsDisplayX=_screen.cx+170
StepsDisplayY=_screen.cy-21

StepsDisplaySourceX=_screen.cx+170
StepsDisplaySourceY=_screen.cy+69

Label1OnCommand=shadowlength,1;zoom,0.8;x,_screen.cx-WideScale(240,320)
Label2OnCommand=shadowlength,1;zoom,0.8;x,_screen.cx-WideScale(240,320)
Label3OnCommand=shadowlength,1;zoom,0.8;x,_screen.cx-WideScale(240,320)
Label4OnCommand=shadowlength,1;zoom,0.8;x,_screen.cx-WideScale(240,320)
Label5OnCommand=shadowlength,1;zoom,0.8;x,_screen.cx-WideScale(240,320)
Label6OnCommand=shadowlength,1;zoom,0.8;x,_screen.cx-WideScale(240,320)
Label7OnCommand=shadowlength,1;zoom,0.8;x,_screen.cx-WideScale(240,320)


# group
Value1X=_screen.cx-130
Value1OnCommand=shadowlength,1;zoom,0.8;halign,0

# song
Value2OnCommand=shadowlength,1;zoom,0.7;halign,0

# type
Value3X=_screen.cx-130
Value3OnCommand=shadowlength,1;zoom,0.8;halign,0

# steps
Value4X=_screen.cx-130
Value4OnCommand=shadowlength,1;zoom,0.8;halign,0

# fill type
Value5X=_screen.cx-130
Value5OnCommand=shadowlength,1;zoom,0.8;halign,0

# fill steps
Value6X=_screen.cx-130
Value6OnCommand=shadowlength,1;zoom,0.8;halign,0

# action
Value7X=_screen.cx-130
Value7OnCommand=shadowlength,1;zoom,0.8;halign,0

# rows are hardcoded to be 45px tall
Row1Y=_screen.cy-154
Row2Y=_screen.cy-111
Row3Y=_screen.cy-66
Row4Y=_screen.cy-21
Row5Y=_screen.cy+24
Row6Y=_screen.cy+69
Row7Y=_screen.cy+114

###########################################################################
###		End metrics for ScreenEditMenu
###########################################################################


###########################################################################
###		MISC VISUAL ELEMENTS
###########################################################################

[Background]
RandomBGStartBeat=function() \
	local song = GAMESTATE:GetCurrentSong() \
	if song then return song:GetFirstBeat() end \
	return 0 \
end

[MenuTimer]
FrameOnCommand=visible,false
Text1FormatFunction=function(fSeconds) return math.min(999, math.ceil(fSeconds)) end

Warning6Command=stoptweening;sleep,0.8;linear,0.2;glow,1,1,1,1;
Warning5Command=stoptweening;linear,0.2;glow,1,1,1,0;diffuseshift;effectperiod,1;effectcolor1,HSVA(0,0,1,0.5);effectcolor2,HSVA(0,1,1,0.9)
Warning4Command=stoptweening;linear,0.2
Warning3Command=stoptweening;linear,0.2
Warning2Command=stoptweening;linear,0.2
Warning1Command=stoptweening;linear,0.2
Warning0Command=stoptweening;stopeffect;linear,0.2;zoomx,1
WarningBeepStart=8
Text1OnCommand=stopeffect;stoptweening;shadowlength,0;xy,22,WideScale(11.5,10.5);halign,1;zoom,WideScale(0.3,0.365)
Text2OnCommand=visible,false

# we don't want the MenuTimer fading in and out during each screen transition prior to SelectMusic
# so we define the standard [MenuTimer] to be not use any alpha tweening
# this [MenuTimerFadeIn] is identical but fades into view during its OnCommand
# we use it in ScreenSelectMusic and ScreenEvaluation
[MenuTimerFadeIn]
Fallback="MenuTimer"
Text1OnCommand=stopeffect;stoptweening;shadowlength,0;xy,22,WideScale(11.5,10.5);halign,1;zoom,WideScale(0.3,0.365);sleep,0.1;decelerate,0.333;diffusealpha,1


[HelpDisplay]
TipShowTime=3.5
TipOnCommand=shadowlength,1;diffuseshift;effectperiod,1.25


###########################################################################
###		CORE SETTINGS
###########################################################################
[Gameplay]
MinScoreToMaintainCombo=GetComboThreshold('Maintain')
MinScoreToContinueCombo=GetComboThreshold('Continue')

[PlayerStageStats]
# copied directly from freem's ITG3 port
NumGradeTiersUsed=17
GradeTier01IsAllW2s=false
GradeTier02IsAllW2s=false
# ★★★★
GradePercentTier01=1.00
# ★★★
GradePercentTier02=0.99
# ★★
GradePercentTier03=0.98
# ★
GradePercentTier04=0.96
# S+
GradePercentTier05=0.94
# S
GradePercentTier06=0.92
# S-
GradePercentTier07=0.89
# A+
GradePercentTier08=0.86
# A
GradePercentTier09=0.83
# A-
GradePercentTier10=0.80
# B+
GradePercentTier11=0.76
# B
GradePercentTier12=0.72
# B-
GradePercentTier13=0.68
# C+
GradePercentTier14=0.64
# C
GradePercentTier15=0.60
# C-
GradePercentTier16=0.55
# D
GradePercentTier17=-999

[SongManager]
NumSongGroupColors=12
SongGroupColor1=GetHexColor(1)
SongGroupColor2=GetHexColor(2)
SongGroupColor3=GetHexColor(3)
SongGroupColor4=GetHexColor(4)
SongGroupColor5=GetHexColor(5)
SongGroupColor6=GetHexColor(6)
SongGroupColor7=GetHexColor(7)
SongGroupColor8=GetHexColor(8)
SongGroupColor9=GetHexColor(9)
SongGroupColor10=GetHexColor(10)
SongGroupColor11=GetHexColor(11)
SongGroupColor12=GetHexColor(12)

NumCourseGroupColors=1
CourseGroupColor1=Color.White

# This sets an integer threshold for each song's charts' meters
# if a meter is above this threshold, color the song name differently.
# We don't want this in Simply Love, so set it arbitrarily high.
ExtraColorMeter=999999


[LifeMeterBar]
# MinStayAlive is only used when the LifeMeterBar has its DrainType set to "SuddenDeath"
# that is, never in Simply Love, except maybe in some exotic mod-chart yet to be written.
# see LifeMeterBar.cpp for details regarding the implementation.
MinStayAlive=(SL.Global.GameMode=="FA+" and "TapNoteScore_W4") or "TapNoteScore_W3"

# InitialValue is a floating-point value between [0,1] inclusive that determines how full
# the LifeMeter is at the start of Gameplay.  ITG set this to be 0.5.
InitialValue=0.5

# DangerThreshold is a floating-point value between [0,1] inclusive.  It is used in the
# calculation for LifeMeterBar:IsInDanger().  If the current LifeMeter value is less than
# the DangerThreshold specified here, the player is assigned "HealthState_Danger"
DangerThreshold=0.2

# LifePercentChange metrics dictate how much the LifeMeter changes for each judgment a players earns during Gameplay
# (uh, potentially; it gets complicated because of RegenComboAfterMiss and HarshHotLifePenalty...)
# You can find these values in ./Scripts/SL_Init.lua
LifePercentChangeW1=SL.Metrics[SL.Global.GameMode]["LifePercentChangeW1"]
LifePercentChangeW2=SL.Metrics[SL.Global.GameMode]["LifePercentChangeW2"]
LifePercentChangeW3=SL.Metrics[SL.Global.GameMode]["LifePercentChangeW3"]
LifePercentChangeW4=SL.Metrics[SL.Global.GameMode]["LifePercentChangeW4"]
LifePercentChangeW5=SL.Metrics[SL.Global.GameMode]["LifePercentChangeW5"]
LifePercentChangeMiss=SL.Metrics[SL.Global.GameMode]["LifePercentChangeMiss"]
LifePercentChangeHitMine=SL.Metrics[SL.Global.GameMode]["LifePercentChangeHitMine"]
LifePercentChangeHeld=SL.Metrics[SL.Global.GameMode]["LifePercentChangeHeld"]
LifePercentChangeLetGo=SL.Metrics[SL.Global.GameMode]["LifePercentChangeLetGo"]

[ScoreKeeperNormal]
PercentScoreWeightCheckpointHit=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightCheckpointHit"]
PercentScoreWeightHeld=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightHeld"]
PercentScoreWeightHitMine=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightHitMine"]
PercentScoreWeightLetGo=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightLetGo"]
PercentScoreWeightW1=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightW1"]
PercentScoreWeightW2=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightW2"]
PercentScoreWeightW3=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightW3"]
PercentScoreWeightW4=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightW4"]
PercentScoreWeightW5=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightW5"]
PercentScoreWeightMiss=SL.Metrics[SL.Global.GameMode]["PercentScoreWeightMiss"]

GradeWeightCheckpointHit=SL.Metrics[SL.Global.GameMode]["GradeWeightCheckpointHit"]
GradeWeightHeld=SL.Metrics[SL.Global.GameMode]["GradeWeightHeld"]
GradeWeightHitMine=SL.Metrics[SL.Global.GameMode]["GradeWeightHitMine"]
GradeWeightLetGo=SL.Metrics[SL.Global.GameMode]["GradeWeightLetGo"]
GradeWeightW1=SL.Metrics[SL.Global.GameMode]["GradeWeightW1"]
GradeWeightW2=SL.Metrics[SL.Global.GameMode]["GradeWeightW2"]
GradeWeightW3=SL.Metrics[SL.Global.GameMode]["GradeWeightW3"]
GradeWeightW4=SL.Metrics[SL.Global.GameMode]["GradeWeightW4"]
GradeWeightW5=SL.Metrics[SL.Global.GameMode]["GradeWeightW5"]
GradeWeightMiss=SL.Metrics[SL.Global.GameMode]["GradeWeightMiss"]


[Player]
# Because Simply Love allows absurdly small playfields (via 150% mini)
# increase the normal DrawDistanceBefore, otherwise arrows appear suddenly.
# FIXME: can this be made into a function that returns how much DrawDistance is needed given the current Mini?
DrawDistanceBeforeTargetsPixels=_screen.h*1.5
DrawDistanceAfterTargetsPixels=-130
HoldJudgmentYStandard=(IsGame("pump") and -99999) or -90
ReceptorArrowsYStandard=-125
ReceptorArrowsYReverse=145
PercentUntilColorCombo=0.20
ComboUnderField=true

[Profile]
ShowCoinData=true
UnlockAuthString=""
CustomLoadFunction=LoadProfileCustom
CustomSaveFunction=SaveProfileCustom



